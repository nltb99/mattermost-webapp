{"version":3,"file":"7231.8d9ad4bb8c1b68f423bd.js","mappings":"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","sources":["webpack://mattermost-webapp/./images/onboarding-checklist.svg","webpack://mattermost-webapp/./components/onboarding_tasks/onboarding_video_modal/onboarding_video_modal.tsx","webpack://mattermost-webapp/./node_modules/react-popper/lib/esm/utils.js","webpack://mattermost-webapp/./node_modules/react-popper/lib/esm/usePopper.js","webpack://mattermost-webapp/./components/onboarding_tasklist/onboarding_tasklist_popover.tsx","webpack://mattermost-webapp/./components/onboarding_tasklist/onboarding_tasklist_animations.tsx","webpack://mattermost-webapp/./components/onboarding_tasklist/onboarding_tasklist_task.tsx","webpack://mattermost-webapp/./images/completed.svg","webpack://mattermost-webapp/./components/onboarding_tasklist/onboarding_tasklist_completed.tsx","webpack://mattermost-webapp/./components/onboarding_tasklist/onboarding_tasklist.tsx","webpack://mattermost-webapp/./node_modules/react-fast-compare/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"files/db2d7e134da4eb88e4c06772eb014385.svg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useCallback, useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/common';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\n\nimport {OnboardingTaskCategory, OnboardingTaskList} from '../constants';\nimport './onboarding_video_modal.scss';\n\ntype Props = {\n    onExited: () => void;\n}\n\nconst OnBoardingVideoModal = ({onExited}: Props) => {\n    const [show, setShow] = useState(true);\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(getCurrentUserId);\n\n    const handleHide = useCallback(() => {\n        setShow(false);\n        const preferences = [{\n            user_id: currentUserId,\n            category: OnboardingTaskCategory,\n            name: OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN,\n            value: 'true',\n        }];\n        dispatch(savePreferences(currentUserId, preferences));\n    }, [currentUserId]);\n\n    return (\n        <Modal\n            id={OnboardingTaskList.ONBOARDING_VIDEO_MODAL}\n            dialogClassName='a11y__modal on-boarding-video_modal'\n            show={show}\n            onHide={handleHide}\n            onExited={onExited}\n            enforceFocus={false}\n            role='dialog'\n            aria-labelledby='onBoardingVideoModal'\n        >\n            <Modal.Header\n                closeButton={true}\n            />\n            <Modal.Body>\n                <iframe\n                    src='//fast.wistia.net/embed/iframe/3t4dpc0k6b'\n                    // eslint-disable-next-line react/no-unknown-property\n                    allowTransparency={true}\n                    frameBorder='0'\n                    scrolling='no'\n                    className='wistia_embed'\n                    name='wistia_embed'\n                    allowFullScreen={true}\n                />\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default OnBoardingVideoModal;\n","import * as React from 'react';\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === 'function') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nexport var fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        ReactDOM.flushSync(function () {\n          setState({\n            styles: fromEntries(elements.map(function (element) {\n              return [element, state.styles[element] || {}];\n            })),\n            attributes: fromEntries(elements.map(function (element) {\n              return [element, state.attributes[element]];\n            }))\n          });\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {RefObject} from 'react';\nimport {usePopper} from 'react-popper';\nimport {CSSTransition} from 'react-transition-group';\nimport styled from 'styled-components';\nimport {Placement} from 'popper.js';\n\nconst Overlay = styled.div`\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    height: 100%;\n    min-height: 100%;\n    left: 0;\n    right: 0;\n    top: 0;\n    position: fixed;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    overscroll-behavior: contain;\n    pointer-events: auto;\n    -ms-scroll-chaining: none;\n    transition: 150ms;\n    transition-property: background-color;\n    transition-timing-function: ease-in-out;\n    z-index: 100;\n    &.fade-enter {\n        background-color: rgba(0, 0, 0, 0);\n    }\n    &.fade-enter-active {\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n    &.fade-enter-done {\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n    &.fade-exit {\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n    &.fade-exit-active {\n        background-color: rgba(0, 0, 0, 0);\n    }\n    &.fade-exit-done {\n        background-color: rgba(0, 0, 0, 0);\n    }\n`;\n\ninterface TaskListPopoverProps {\n    trigger: RefObject<HTMLButtonElement>;\n    isVisible: boolean;\n    placement?: Placement;\n    offset?: [number | null | undefined, number | null | undefined];\n    children?: React.ReactNode;\n    onClick?: () => void;\n}\n\nexport const TaskListPopover = ({\n    trigger,\n    placement = 'top-start',\n    isVisible,\n    offset = [0, 5],\n    children,\n    onClick,\n}: TaskListPopoverProps): JSX.Element | null => {\n    const [popperElement, setPopperElement] =\n        React.useState<HTMLDivElement | null>(null);\n\n    const {\n        styles: {popper},\n        attributes,\n    } = usePopper(trigger.current, popperElement, {\n        placement,\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset,\n                },\n            },\n        ],\n    });\n    const style = {\n        ...popper,\n        zIndex: isVisible ? 100 : -1,\n    };\n    return (\n        <>\n            <CSSTransition\n                timeout={150}\n                classNames='fade'\n                in={isVisible}\n                unmountOnExit={true}\n            >\n                <Overlay\n                    onClick={onClick}\n                    data-cy='onboarding-task-list-overlay'\n                />\n            </CSSTransition>\n            <div\n                ref={setPopperElement}\n                style={style}\n                {...attributes.popper}\n            >\n                {children}\n            </div>\n        </>\n    );\n};\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport StatusIcon from '@mattermost/compass-components/components/status-icon';\n\nconst Animation = styled.div`\n    position: absolute;\n    z-index: 30;\n    flex-direction: column;\n    left: 15px;\n    bottom: 0;\n    display: none;\n\n    &.completed {\n        display: flex;\n    }\n\n    &:before {\n        content: '';\n        background-color: var(--denim-status-online);\n        opacity: 0;\n        border-radius: 50%;\n        width: 1rem;\n        bottom: 15%;\n        position: absolute;\n        height: 1rem;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n    }\n\n    .x1 {\n        opacity: 0;\n        animation-delay: 150ms;\n    }\n\n    .x2 {\n        transform: scale(0.6);\n        margin-left: 6px;\n        animation-delay: 250ms;\n        opacity: 0;\n    }\n    .x3 {\n        transform: scale(0.6);\n        margin-left: -6px;\n        animation-delay: 300ms;\n        opacity: 0;\n    }\n    .x4 {\n        transform: scale(0.2);\n        opacity: 0;\n    }\n\n    &.completed {\n        &:before {\n            animation: opacity 800ms ease-in-out, scale 800ms linear;\n        }\n        .x1, .x2, .x3, .x4 {\n            animation: opacity 900ms ease-in-out, moveUp 900ms linear;\n        }\n    }\n    @keyframes moveUp {\n        0% { \n            top: 0;\n        }\n        100% { \n            top: -50px;\n        }\n    }\n\n    @keyframes opacity {\n        0% { \n            opacity:0;\n        }\n        50% { \n            opacity: 1;\n        }\n        100% { \n            opacity: 0;\n        }\n    }\n\n    @keyframes scale {\n        0% { \n            transform: scale(0);\n        }\n        50% { \n            transform: scale(2);\n        }\n        100% { \n            transform: scale(4);\n        }\n    }\n\n`;\n\nexport const CompletedAnimation = (props: {completed: boolean}) => {\n    return (\n        <Animation className={props.completed ? 'completed' : ''}>\n            <StatusIcon\n                status={'online'}\n                className={'x1'}\n            />\n            <StatusIcon\n                status={'online'}\n                className={'x2'}\n            />\n            <StatusIcon\n                status={'online'}\n                className={'x3'}\n            />\n            <StatusIcon\n                status={'online'}\n                className={'x4'}\n            />\n        </Animation>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport {CompletedAnimation} from './onboarding_tasklist_animations';\n\nexport interface TaskProps {\n    label: React.ReactElement;\n    icon?: React.ReactNode;\n    onClick?: () => void;\n    completedStatus: boolean;\n}\n\nconst StyledTask = styled.div`\n    display: flex;\n    background-color: var(--center-channel-bg);\n    cursor: pointer;\n    width: 100%;\n    padding: 8px 20px;\n    font-size: 14px;\n    align-items: flex-start;\n    color: var(--center-channel-color);\n    position: relative;\n\n    span {\n        div {\n            display: flex;\n            align-items: flex-start;\n            picture {\n                display: flex;\n                align-items: center;\n                margin-right: 10px;\n            }\n        }\n    }\n\n    &.completed {\n        color: var(--denim-status-online);\n\n        span {\n            span {\n                text-decoration: underline;\n                text-decoration-skip-ink: none;\n                text-underline-offset: -0.325em;\n            }\n        }\n    }\n\n    :hover {\n        background: rgba(var(--center-channel-color-rgb), 0.08);\n    }\n    :active {\n        background-color: rgba(var(--button-bg-rgb), 0.08);\n    }\n    :focus {\n        box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.32),\n            inset 0 0 0 2px blue;\n    }\n    transition: background 250ms ease-in-out, color 250ms ease-in-out,\n        box-shadow 250ms ease-in-out;\n`;\n\nexport const Task = (props: TaskProps): JSX.Element => {\n    const {label, completedStatus, onClick} = props;\n\n    const handleOnClick = () => {\n        if (onClick) {\n            onClick();\n        }\n    };\n\n    return (\n        <StyledTask\n            className={completedStatus ? 'completed' : ''}\n            onClick={handleOnClick}\n        >\n            {completedStatus && <CompletedAnimation completed={completedStatus}/>}\n            <span>{label}</span>\n        </StyledTask>\n    );\n};\n","export default __webpack_public_path__ + \"files/2a8c0b1b24fe26f9bfcfc0cfbaddb838.svg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect} from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport styled from 'styled-components';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {GlobalState} from '@mattermost/types/store';\n\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getPrevTrialLicense} from 'mattermost-redux/actions/admin';\n\nimport {AboutLinks, LicenseLinks, LicenseSkus} from 'utils/constants';\n\nimport StartTrialBtn from 'components/learn_more_trial_modal/start_trial_btn';\nimport CloudStartTrialButton from 'components/cloud_start_trial/cloud_start_trial_btn';\n\nimport completedImg from 'images/completed.svg';\n\nconst CompletedWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 26px 24px 0 24px;\n    margin: auto;\n    text-align: center;\n    word-break: break-word;\n    width: 100%;\n    height: 500px;\n\n    &.fade-enter {\n        transform: scale(0);\n    }\n    &.fade-enter-active {\n        transform: scale(1);\n    }\n    &.fade-enter-done {\n        transform: scale(1);\n    }\n    &.fade-exit {\n        transform: scale(1);\n    }\n    &.fade-exit-active {\n        transform: scale(1);\n    }\n    &.fade-exit-done {\n        transform: scale(1);\n    }\n    .start-trial-btn, button {\n        padding: 13px 20px;\n        background: var(--button-bg);\n        border-radius: 4px;\n        color: var(--sidebar-text);\n        border: none;\n        font-weight: bold;\n        margin-top: 15px;\n        min-height: 40px;\n        &:hover {\n            background: var(--button-bg) !important;\n            color: var(--sidebar-text) !important;\n        }\n    }\n\n    h2 {\n        font-size: 20px;\n        margin: 0 0 10px;\n        font-weight: 600;\n    }\n\n    .start-trial-text, .completed-subtitle {\n        font-size: 14px !important;\n        color: rgba(var(--center-channel-color-rgb), 0.72);\n        line-height: 20px;\n    }\n\n    .completed-subtitle {\n        margin-top: 5px;\n    }\n\n    .disclaimer, .download-apps {\n        width: 90%;\n        margin-top: 15px;\n        color: rgba(var(--center-channel-color-rgb), 0.72);\n        font-family: \"Open Sans\";\n        font-style: normal;\n        font-weight: normal;\n        line-height: 16px;\n    }\n\n    .disclaimer {\n        text-align: left;\n        margin-top: auto;\n        font-size: 11px;\n    }\n\n    .download-apps {\n        margin-top: 24px;\n        width: 200px;\n        font-size: 12px;\n    }\n`;\n\ninterface Props {\n    dismissAction: () => void;\n    isCurrentUserSystemAdmin: boolean;\n    isFirstAdmin: boolean;\n}\n\nconst Completed = (props: Props): JSX.Element => {\n    const {dismissAction} = props;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPrevTrialLicense());\n    }, []);\n\n    const prevTrialLicense = useSelector((state: GlobalState) => state.entities.admin.prevTrialLicense);\n    const license = useSelector(getLicense);\n    const isPrevLicensed = prevTrialLicense?.IsLicensed;\n    const isCurrentLicensed = license?.IsLicensed;\n\n    // Cloud conditions\n    const subscription = useSelector((state: GlobalState) => state.entities.cloud.subscription);\n    const isCloud = license?.Cloud === 'true';\n    const isFreeTrial = subscription?.is_free_trial === 'true';\n    const hadPrevCloudTrial = subscription?.is_free_trial === 'false' && subscription?.trial_end_at > 0;\n    const isPaidSubscription = isCloud && license?.SkuShortName !== LicenseSkus.Starter && !isFreeTrial;\n\n    // Show this CTA if the instance is currently not licensed and has never had a trial license loaded before\n    // also check that the user is a system admin (this after the onboarding task list is shown to all users)\n    const selfHostedTrialCondition = (isCurrentLicensed === 'false' && isPrevLicensed === 'false') &&\n    (props.isCurrentUserSystemAdmin || props.isFirstAdmin);\n\n    // if Cloud, show if not in trial and had never been on trial\n    const cloudTrialCondition = isCloud && !isFreeTrial && !hadPrevCloudTrial && !isPaidSubscription;\n\n    const showStartTrialBtn = selfHostedTrialCondition || cloudTrialCondition;\n\n    const {formatMessage} = useIntl();\n\n    return (\n        <>\n            <CSSTransition\n                in={true}\n                timeout={150}\n                classNames='fade'\n            >\n                <CompletedWrapper>\n                    <img\n                        src={completedImg}\n                        alt={'completed tasks image'}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id={'onboardingTask.checklist.completed_title'}\n                            defaultMessage='Well done. You’ve completed all of the tasks!'\n                        />\n                    </h2>\n                    <span className='completed-subtitle'>\n                        <FormattedMessage\n                            id={'onboardingTask.checklist.completed_subtitle'}\n                            defaultMessage='We hope Mattermost is more familiar now.'\n                        />\n                    </span>\n\n                    {showStartTrialBtn ? (\n                        <>\n                            <span className='start-trial-text'>\n                                <FormattedMessage\n                                    id='onboardingTask.checklist.higher_security_features'\n                                    defaultMessage='Interested in our higher-security features?'\n                                /> <br/>\n                                <FormattedMessage\n                                    id='onboardingTask.checklist.start_enterprise_now'\n                                    defaultMessage='Start your free Enterprise trial now!'\n                                />\n                            </span>\n                            {isCloud ? (\n                                <CloudStartTrialButton\n                                    message={formatMessage({id: 'trial_btn.free.tryFreeFor30Days', defaultMessage: 'Try free for 30 days'})}\n                                    telemetryId={'start_cloud_trial_after_completing_steps'}\n                                    extraClass={'btn btn-primary'}\n                                    afterTrialRequest={dismissAction}\n                                />\n                            ) : (\n                                <StartTrialBtn\n                                    message={formatMessage({id: 'start_trial.modal_btn.start_free_trial', defaultMessage: 'Start free 30-day trial'})}\n                                    telemetryId='start_trial_from_onboarding_completed_task'\n                                    onClick={dismissAction}\n                                />\n                            )}\n                        </>\n\n                    ) : (\n                        <button onClick={dismissAction}>\n                            <FormattedMessage\n                                id={'collapsed_reply_threads_modal.confirm'}\n                                defaultMessage='Got it'\n                            />\n                        </button>\n                    )}\n                    <div className='download-apps'>\n                        <span>\n                            <FormattedMessage\n                                id='onboardingTask.checklist.downloads'\n                                defaultMessage='Now that you’re all set up, <link>download our apps.</link>!'\n                                values={{\n                                    link: (msg: React.ReactNode) => (\n                                        <a\n                                            href='https://mattermost.com/download'\n                                            target='_blank'\n                                            rel='noreferrer'\n                                        >\n                                            {msg}\n                                        </a>\n                                    ),\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {showStartTrialBtn && <div className='disclaimer'>\n                        <span>\n                            <FormattedMessage\n                                id='onboardingTask.checklist.disclaimer'\n                                defaultMessage='By clicking “Start trial”, I agree to the <linkEvaluation>Mattermost Software and Services License Agreement</linkEvaluation>, <linkPrivacy>privacy policy</linkPrivacy> and receiving product emails.'\n                                values={{\n                                    linkEvaluation: (msg: React.ReactNode) => (\n                                        <a\n                                            href={LicenseLinks.SOFTWARE_SERVICES_LICENSE_AGREEMENT}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                        >\n                                            {msg}\n                                        </a>\n                                    ),\n                                    linkPrivacy: (msg: React.ReactNode) => (\n                                        <a\n                                            href={AboutLinks.PRIVACY_POLICY}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                        >\n                                            {msg}\n                                        </a>\n                                    ),\n                                }}\n                            />\n                        </span>\n                    </div>}\n                </CompletedWrapper>\n            </CSSTransition>\n        </>\n    );\n};\n\nexport default Completed;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useRef, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport styled, {css} from 'styled-components';\n\nimport Icon from '@mattermost/compass-components/foundations/icon/Icon';\nimport {FormattedMessage} from 'react-intl';\n\nimport {useFirstAdminUser, useIsCurrentUserSystemAdmin} from 'components/global_header/hooks';\n\nimport {getPrevTrialLicense} from 'mattermost-redux/actions/admin';\nimport {getShowTaskListBool} from 'selectors/onboarding';\nimport {getBool, getMyPreferences as getMyPreferencesSelector} from 'mattermost-redux/selectors/entities/preferences';\nimport {getMyPreferences, savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {trackEvent} from 'actions/telemetry_actions';\nimport checklistImg from 'images/onboarding-checklist.svg';\nimport {\n    useTasksListWithStatus,\n    OnboardingTaskCategory,\n    OnboardingTaskList,\n} from 'components/onboarding_tasks';\nimport {useHandleOnBoardingTaskTrigger} from 'components/onboarding_tasks/onboarding_tasks_manager';\nimport {openModal} from 'actions/views/modals';\nimport {GlobalState} from 'types/store';\nimport OnBoardingVideoModal from 'components/onboarding_tasks/onboarding_video_modal/onboarding_video_modal';\n\nimport {Preferences, RecommendedNextStepsLegacy} from 'utils/constants';\n\nimport {TaskListPopover} from './onboarding_tasklist_popover';\nimport {Task} from './onboarding_tasklist_task';\nimport Completed from './onboarding_tasklist_completed';\nimport {CompletedAnimation} from './onboarding_tasklist_animations';\n\nconst TaskItems = styled.div`\n    border-radius: 4px;\n    border: solid 1px rgba(var(--center-channel-color-rgb), 0.16);\n    background-color: var(--center-channel-bg);\n    width: 352px;\n    padding: 24px 0;\n    transform: scale(0);\n    opacity: 0;\n    box-shadow: var(--elevation-6);\n    transition: opacity 250ms ease-in-out 0ms, transform 250ms ease-in-out 0ms;\n    transform-origin: left bottom;\n    max-height: ${document.documentElement.clientHeight}px;\n    overflow-y: auto;\n\n    &.open {\n        transform: scale(1);\n        opacity: 1;\n    }\n\n    h1 {\n        font-size: 20px;\n        padding: 0 24px;\n        margin: 0;\n    }\n\n    p {\n        font-size: 12px;\n        color: rgba(var(--center-channel-color-rgb), 0.72);\n        padding: 4px 24px;\n    }\n\n    .link {\n        font-size: 12px;\n        color: var(--link-color);\n        padding: 12px 24px 0;\n        font-weight: bold;\n        cursor: pointer;\n        display: block;\n        :hover{\n          text-decoration: underline\n        }\n    }\n`;\n\nconst Button = styled.button<{open: boolean}>(({open}) => {\n    return css`\n        width: 36px;\n        height: 36px;\n        padding: 7px;\n        border-radius: 50%;\n        left: 20px;\n        bottom: 20px;\n        position: fixed;\n        z-index: 101;\n        display: flex;\n        align-items: center;\n        background: var(--center-channel-bg);\n        border: solid 1px rgba(var(--center-channel-color-rgb), 0.16);\n        box-shadow: var(--elevation-3);\n\n        i {\n            color: rgba(var(--center-channel-color-rgb), 0.56);\n        }\n\n        &:hover {\n            border-color: rgba(var(--center-channel-color-rgb), 0.24);\n            box-shadow: var(--elevation-4);\n\n            i {\n                color: rgba(var(--center-channel-color-rgb), 0.72)\n            }\n        }\n\n        span {\n            width: 20px;\n            height: 16px;\n            background: var(--button-bg);\n            position: fixed;\n            display: ${open ? 'none' : 'block'};\n            border-radius: 12px;\n            color: var(--button-color);\n            font-weight: bold;\n            font-size: 11px;\n            line-height: 16px;\n            bottom: 47px;\n            left: 41px;\n        }\n    `;\n});\n\nconst PlayButton = styled.button`\n    padding: 10px 20px;\n    max-width: 175px;\n    background: var(--button-bg);\n    border-radius: 4px;\n    color: var(--button-color);\n    border: none;\n    font-weight: bold;\n    position: absolute;\n    z-index: 1;\n    margin-left: auto;\n    margin-right: auto;\n    left: 0;\n    right: 0;\n    top: 48px;\n\n    &:hover {\n        border-color: rgba(var(--center-channel-color-rgb), 0.24);\n        box-shadow: var(--elevation-4);\n    }\n\n    i {\n        margin-right: 10px;\n        vertical-align: middle;\n    }\n`;\n\nconst Skeleton = styled.div`\n    height: auto;\n    margin: 0 auto;\n    padding: 0 20px;\n    position: relative;\n`;\n\nconst OnBoardingTaskList = (): JSX.Element | null => {\n    const myPreferences = useSelector((state: GlobalState) => getMyPreferencesSelector(state));\n\n    useEffect(() => {\n        dispatch(getPrevTrialLicense());\n        if (Object.keys(myPreferences).length === 0) {\n            dispatch(getMyPreferences());\n        }\n    }, []);\n\n    const open = useSelector(((state: GlobalState) => getBool(state, OnboardingTaskCategory, OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN)));\n    const trigger = useRef<HTMLButtonElement>(null);\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(getCurrentUserId);\n    const handleTaskTrigger = useHandleOnBoardingTaskTrigger();\n    const tasksList = useTasksListWithStatus();\n    const [completedCount, setCompletedCount] = useState(tasksList.filter((task) => task.status).length);\n    const [showAnimation, setShowAnimation] = useState(false);\n    const itemsLeft = tasksList.length - completedCount;\n    const isCurrentUserSystemAdmin = useIsCurrentUserSystemAdmin();\n    const isFirstAdmin = useFirstAdminUser();\n    const isEnableOnboardingFlow = useSelector((state: GlobalState) => getConfig(state).EnableOnboardingFlow === 'true');\n    const [showTaskList, firstTimeOnboarding] = useSelector(getShowTaskListBool);\n\n    const startTask = (taskName: string) => {\n        toggleTaskList();\n        handleTaskTrigger(taskName);\n    };\n\n    const initOnboardingPrefs = async () => {\n        // save to preferences the show/open-task-list to true\n        // also save the recomendedNextSteps-hide to true to avoid asserting to true\n        // the logic to firstTimeOnboarding\n        await dispatch(savePreferences(currentUserId, [\n            {\n                category: OnboardingTaskCategory,\n                user_id: currentUserId,\n                name: OnboardingTaskList.ONBOARDING_TASK_LIST_SHOW,\n                value: 'true',\n            },\n            {\n                user_id: currentUserId,\n                category: OnboardingTaskCategory,\n                name: OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN,\n                value: 'true',\n            },\n            {\n                user_id: currentUserId,\n                category: Preferences.RECOMMENDED_NEXT_STEPS,\n                name: RecommendedNextStepsLegacy.HIDE,\n                value: 'true',\n            },\n        ]));\n    };\n\n    useEffect(() => {\n        if (firstTimeOnboarding) {\n            initOnboardingPrefs();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (firstTimeOnboarding && showTaskList && isEnableOnboardingFlow) {\n            trackEvent(OnboardingTaskCategory, OnboardingTaskList.ONBOARDING_TASK_LIST_SHOW);\n        }\n    }, [firstTimeOnboarding, showTaskList, isEnableOnboardingFlow]);\n\n    // Done to show task done animation in closed state as well\n    useEffect(() => {\n        const newCCount = tasksList.filter((task) => task.status).length;\n        const show = localStorage.getItem(OnboardingTaskCategory);\n        if (show || ((completedCount + 1) === newCCount && !open)) {\n            setTimeout(() => {\n                setShowAnimation(true);\n                setCompletedCount(newCCount);\n            }, 100);\n            setTimeout(() => {\n                setShowAnimation(false);\n                setCompletedCount(newCCount);\n            }, 500);\n            localStorage.removeItem(OnboardingTaskCategory);\n        } else {\n            setCompletedCount(newCCount);\n        }\n    }, [tasksList, completedCount]);\n\n    const dismissChecklist = useCallback(() => {\n        const preferences = [{\n            user_id: currentUserId,\n            category: OnboardingTaskCategory,\n            name: OnboardingTaskList.ONBOARDING_TASK_LIST_SHOW,\n            value: 'false',\n        },\n        {\n            user_id: currentUserId,\n            category: OnboardingTaskCategory,\n            name: OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN,\n            value: 'false',\n        }];\n        dispatch(savePreferences(currentUserId, preferences));\n        trackEvent(OnboardingTaskCategory, OnboardingTaskList.DECLINED_ONBOARDING_TASK_LIST);\n    }, [currentUserId]);\n\n    const toggleTaskList = useCallback(() => {\n        const preferences = [{\n            user_id: currentUserId,\n            category: OnboardingTaskCategory,\n            name: OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN,\n            value: String(!open),\n        }];\n        dispatch(savePreferences(currentUserId, preferences));\n        trackEvent(OnboardingTaskCategory, open ? OnboardingTaskList.ONBOARDING_TASK_LIST_CLOSE : OnboardingTaskList.ONBOARDING_TASK_LIST_OPEN);\n    }, [open, currentUserId]);\n\n    const openVideoModal = useCallback(() => {\n        toggleTaskList();\n        dispatch(openModal({\n            modalId: OnboardingTaskList.ONBOARDING_VIDEO_MODAL,\n            dialogType: OnBoardingVideoModal,\n            dialogProps: {},\n        }));\n    }, []);\n\n    if (Object.keys(myPreferences).length === 0 || !showTaskList || !isEnableOnboardingFlow) {\n        return null;\n    }\n\n    return (\n        <>\n            <CompletedAnimation completed={showAnimation}/>\n            <Button\n                onClick={toggleTaskList}\n                ref={trigger}\n                open={open}\n                data-cy='onboarding-task-list-action-button'\n            >\n                <Icon glyph={open ? 'close' : 'playlist-check'}/>\n                {itemsLeft !== 0 && (<span>{itemsLeft}</span>)}\n            </Button>\n            <TaskListPopover\n                isVisible={open}\n                trigger={trigger}\n                onClick={toggleTaskList}\n            >\n                <TaskItems className={open ? 'open' : ''}>\n                    {completedCount === tasksList.length ?\n                        <Completed\n                            dismissAction={dismissChecklist}\n                            isFirstAdmin={isFirstAdmin}\n                            isCurrentUserSystemAdmin={isCurrentUserSystemAdmin}\n                        /> : (\n                            <>\n                                <h1>\n                                    <FormattedMessage\n                                        id='next_steps_view.welcomeToMattermost'\n                                        defaultMessage='Welcome to Mattermost'\n                                    />\n                                </h1>\n                                <p>\n                                    <FormattedMessage\n                                        id='onboardingTask.checklist.main_subtitle'\n                                        defaultMessage=\"Let's get up and running.\"\n                                    />\n                                </p>\n                                <Skeleton>\n                                    <img\n                                        src={checklistImg}\n                                        alt={'On Boarding video'}\n                                        style={{display: 'block', margin: '1rem auto', borderRadius: '4px'}}\n                                    />\n                                    <PlayButton\n                                        onClick={openVideoModal}\n                                    >\n                                        <Icon\n                                            glyph={'play'}\n                                            size={16}\n                                        />\n                                        <FormattedMessage\n                                            id='onboardingTask.checklist.video_title'\n                                            defaultMessage='Watch overview'\n                                        />\n                                    </PlayButton>\n                                </Skeleton>\n                                {tasksList.map((task) => (\n                                    <Task\n                                        key={OnboardingTaskCategory + task.name}\n                                        label={task.label()}\n                                        onClick={() => {\n                                            startTask(task.name);\n                                        }}\n                                        completedStatus={task.status}\n                                    />\n                                ))}\n                                <span\n                                    className='link'\n                                    onClick={dismissChecklist}\n                                >\n                                    <FormattedMessage\n                                        id='onboardingTask.checklist.dismiss_link'\n                                        defaultMessage='No thanks, I’ll figure it out myself'\n                                    />\n                                </span>\n                            </>\n                        )}\n                </TaskItems>\n            </TaskListPopover>\n        </>\n    );\n};\n\nexport default OnBoardingTaskList;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n"],"names":["OnBoardingVideoModal","onExited","show","setShow","useState","dispatch","useDispatch","currentUserId","useSelector","getCurrentUserId","handleHide","useCallback","preferences","user_id","category","OnboardingTaskCategory","name","OnboardingTaskList","value","savePreferences","Modal","id","dialogClassName","onHide","enforceFocus","role","closeButton","src","allowTransparency","frameBorder","scrolling","className","allowFullScreen","fromEntries","entries","reduce","acc","_ref","key","useIsomorphicLayoutEffect","window","document","createElement","EMPTY_MODIFIERS","usePopper","referenceElement","popperElement","options","prevOptions","optionsWithDefaults","onFirstUpdate","placement","strategy","modifiers","_React$useState","styles","popper","position","left","top","arrow","attributes","state","setState","updateStateModifier","enabled","phase","fn","elements","Object","keys","map","element","requires","popperOptions","newOptions","concat","current","popperInstanceRef","setOptions","popperInstance","createPopper","destroy","update","forceUpdate","Overlay","styled","TaskListPopover","trigger","isVisible","offset","children","onClick","setPopperElement","React","style","zIndex","CSSTransition","timeout","classNames","in","unmountOnExit","ref","bool","Animation","CompletedAnimation","props","completed","status","StyledTask","Task","label","completedStatus","icon","CompletedWrapper","Completed","dismissAction","useEffect","getPrevTrialLicense","prevTrialLicense","entities","admin","license","getLicense","isPrevLicensed","IsLicensed","isCurrentLicensed","subscription","cloud","isCloud","Cloud","isFreeTrial","is_free_trial","hadPrevCloudTrial","trial_end_at","isPaidSubscription","SkuShortName","LicenseSkus","showStartTrialBtn","isCurrentUserSystemAdmin","isFirstAdmin","formatMessage","useIntl","completedImg","alt","FormattedMessage","defaultMessage","message","telemetryId","extraClass","afterTrialRequest","values","link","msg","href","target","rel","linkEvaluation","LicenseLinks","linkPrivacy","AboutLinks","TaskItems","documentElement","clientHeight","Button","open","css","PlayButton","Skeleton","myPreferences","getMyPreferencesSelector","length","getMyPreferences","getBool","useRef","handleTaskTrigger","useHandleOnBoardingTaskTrigger","tasksList","useTasksListWithStatus","completedCount","setCompletedCount","filter","task","showAnimation","setShowAnimation","itemsLeft","useIsCurrentUserSystemAdmin","useFirstAdminUser","isEnableOnboardingFlow","getConfig","EnableOnboardingFlow","showTaskList","firstTimeOnboarding","getShowTaskListBool","async","Preferences","RecommendedNextStepsLegacy","initOnboardingPrefs","trackEvent","newCCount","localStorage","getItem","setTimeout","removeItem","dismissChecklist","toggleTaskList","String","openVideoModal","openModal","modalId","dialogType","dialogProps","Icon","glyph","checklistImg","display","margin","borderRadius","size","taskName","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","a","b","constructor","i","it","Array","isArray","next","done","has","get","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","$$typeof","module","exports","error","match","console","warn"],"sourceRoot":""}